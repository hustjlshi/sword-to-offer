class Solution {
public:
    int fb(vector<int> &arr, int left, int right){
        if(left >= right) return left;
        int tem = arr[left];
        int i = left;
        int j = right;
        while(i < j){
            while(i < j && arr[j] > tem){
                j--;
            }
            if(i < j){
                swap(arr[i], arr[j]);
                i++;
            }
            while(i < j && arr[i] < tem){
                i++;
            }
            if(i < j){
                swap(arr[i], arr[j]);
                j--;
            }
        }
        arr[i] = tem;
        return i;
    }
    vector<int> GetLeastNumbers_Solution(vector<int> input, int k) {
        int len = input.size();
        if(len < k || k == 0) return {};
        int left = 0;
        int right = len - 1;
        int index;
        while(left <= right){
            index = fb(input, left, right);
            if(index == k - 1) break;
            else if(index < k - 1){
                left = index + 1;
            }
            else{
                right = index - 1;
            }
        }
        vector<int> ans;
        for(int i = 0; i <= index; i++){
            ans.push_back(input[i]);
        }
        sort(ans.begin(), ans.end());
        return ans;
    }
};
